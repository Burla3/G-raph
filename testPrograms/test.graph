function Hej():
    bobbob = 8008
    Print('{bobbob}')

function Hejsa(looort):
    tis = looort + 4
    Print('{tis}')

function Toaster(ost, skinke, broed):
    toast = ost + skinke + broed
    Print('{toast}')

function SomeFunc():
    return 7

function GiveBack():
    pass
    if True:
        if False:
            return 9
        else:
            pass
        SomeFunc()
        return 5
    else:
        pass
    return 4

function HovHov():
    pass

@run:
    graphVar2 = graph:
        'a'
        'b' ('c')
        'c' ('d' 5)

    eF = GetEdgesFrom(graphVar2, 'b')
    eT = GetEdgesTo(graphVar2, 'c')
    adj = VerticesAdjacentTo(graphVar2, 'b')

    Print('eF {eF}')
    Print('eT {eT}')
    Print('adj {adj}')

    listgraph = [graphVar2]

    Print('{listgraph}')

    g = [99, 3, 4, 5, 6, 7, True, False]

    g[1] = 67567

    for each ele in g:
        Print('{ele}')

    h = g[1]
    Print('{h}')

    hmm = 2
    bobbob = hmm + 3
    hmm = bobbob + hmm
    Print('{hmm}')

    andet = '{bobbob}value of\{javel} hmm is: {hmm}'
    Print('{andet}')
    javel = True
    jamenDog = False

    hov = bobbob > hmm


    lol = True

    if False:
        Print('{lol}')
    else:
        Print('HOVHOV')

    Hej()
    Hejsa(hmm)
    Toaster(2, 4, 8)

    Print('{bobbob}')

    i = 0

    while 9 > i:
        i = i + 1
        Print('{i}')

    itsBack = GiveBack()

    Print('Hej med dig')

    Print('{itsBack}')

    b = [1..5]

    graphVar = graph:
        'a'
        'b' ('c')

    graphVar2 = graph:
        'a'
        'q' ('w' 3)

    HovHov()

    vertex = GetVertex(graphVar, 'a')
    vName = vertex['name']
    /*
    vertex['bob'] = 34
    vLabel = vertex['bob']

    Print('{vLabel}')
    */
    Print('{vName}')

    if 1 > 2:
        Print('if')
    else if False:
        Print('else if')
    else if True:
        Print('else if 2')
    else:
        Print('else')

    b = [5..1]
    c = [1, [2, 3], 4]

    Print('{b}')
    Print('{c}')
    Print('{graphVar}')

    Print('')
    Print('Graph Operations')
    Print('------------------------------------------------------')

    diffedGraph = graphVar diff graphVar2
    Print('Diffed graph')
    Print('{diffedGraph}')

    intersectedGraph = graphVar intersect graphVar2
    Print('Intersected graph')
    Print('{intersectedGraph}')

    unionedGraph = graphVar union graphVar2
    Print('Unioned graph')
    Print('{unionedGraph}')

    list1 = [1, 2, 3, 4]
    list2 = [4, 5, 6, graphVar2]

    listConcat = list1 concat list2

    Print('')
    Print('List concatenation')
    Print('------------------------------------------------------')

    Print('{listConcat}')

    vertex = GetVertex(graphVar2, 'a')
    vertex['bob'] = 34
    vertex['johnny'] = 34

    vertexList = GetVertices(graphVar2)

    Print('{vertexList}')

    edgeList = GetEdges(graphVar2)

    Print('{edgeList}')
