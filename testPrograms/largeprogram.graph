procedure DFS(g):
    for each u in g.vertices:
        u.color = 'WHITE'
        u.pi = 'NIL'
    time = 0
    for each u in g.vertices:
        if u.color is 'WHITE':
            g = DFSVISIT(g, u)
    return g

procedure DFSVISIT(g, u):
    time = time + 1
    u.d = time
    u.color = 'GRAY'
    for each v in g.Adj(u):
        if v.color is 'WHITE':
            v.pi = u
            g = DFSVISIT(g, v)
    u.color = 'BLACK'
    time = time + 1
    u.f = time

@run:
    g = graph:
        a (->b 3), (->d 5)
        b (->e 4)
        c
        d (->c 6), (->b 4)
        e (->a 2)

    DFS(ref g)

    for each u in dfsGraph.vertices:
        Print('{u.name}, {u.d}/{u.f}\n')
/*
 * Above print statements yield the following result.
 *
 * a, 1/10
 * b, 2/5
 * c, 7/8
 * d, 6/9
 * e, 3/4
 *
*/
