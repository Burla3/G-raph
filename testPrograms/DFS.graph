/* Returns the graph with colors and visit times.
 *
 * g : Graph
 */
function DFS(g):
    vertices = GetVertices(g)
    for each u in vertices:
        u['color'] = 'WHITE'
        u['pi'] = 'NIL'
    g = SetVertices(g, vertices)
    time = 0

    for each u in vertices:
        if u['color'] is 'WHITE':
            DFSVISIT(ref g, u, ref time)

    return g

/* Visits the vertex colorizing it and setting visit times.
 *
 * g : Graph
 * u : Vertex
 * time : Number
 */
function DFSVISIT(g, u, time):
    time = time + 1
    u['d'] = time
    u['color'] = 'GRAY'
    g = SetVertex(g, u)

    for each v in VerticesAdjacentTo(g, u['name']):
        if v['color'] is 'WHITE':
            v['pi'] = u
            g = SetVertex(g, v)
            DFSVISIT(ref g, v, ref time)

    u['color'] = 'BLACK'
    time = time + 1
    u['f'] = time
    g = SetVertex(g, u)

@run:
    g = graph:
        'a' (->'b' 3), (->'d' 5)
        'b' (->'e' 4)
        'c'
        'd' (->'c' 6), (->'b' 4)
        'e' (->'a' 2)

    dfsGraph = DFS(g)

    for each u in GetVertices(dfsGraph):
        name = u['name']
        d = u['d']
        f = u['f']
        Print('{name}, {d}/{f}')


/*
 * Above print statements print the following to standard output.
 *
 * a, 1/10
 * b, 2/5
 * c, 7/8
 * d, 6/9
 * e, 3/4
 *
*/
